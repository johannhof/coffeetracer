// Generated by CoffeeScript 1.4.0
(function () {
    var __bind = function (fn, me) {
        return function () {
            return fn.apply(me, arguments);
        };
    };

    this.Vector3 = (function () {

        function Vector3(x, y, z) {
            this.x = x;
            this.y = y;
            this.z = z;
            this.reflectedOn = __bind(this.reflectedOn, this);

            this.asNormal = __bind(this.asNormal, this);

            this.normalized = __bind(this.normalized, this);

            this.cross = __bind(this.cross, this);

            this.dot = __bind(this.dot, this);

            this.mul = __bind(this.mul, this);

            this.sub = __bind(this.sub, this);

            this.add = __bind(this.add, this);

            this.magnitude = Math.sqrt((Math.pow(this.x, 2)) + (Math.pow(this.y, 2)) + (Math.pow(this.z, 2)));
        }

        Vector3.prototype.add = function (v) {
            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);
        };

        Vector3.prototype.sub = function (n) {
            return new Vector3(this.x - n.x, this.y - n.y, this.z - n.z);
        };

        Vector3.prototype.mul = function (c) {
            return new Vector3(this.x * c, this.y * c, this.z * c);
        };

        Vector3.prototype.dot = function (v) {
            return this.x * v.x + this.y * v.y + this.z * v.z;
        };

        Vector3.prototype.cross = function (v) {
            return new Vector3((this.y * v.z) - (this.z * v.y), (this.z * v.x) - (this.x * v.z), (this.x * v.y) - (this.y * v.x));
        };

        Vector3.prototype.normalized = function () {
            return this.mul(1 / Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z));
        };

        Vector3.prototype.asNormal = function () {
            var v;
            v = this.normalized();
            return new Normal3(v.x, v.y, v.z);
        };

        Vector3.prototype.reflectedOn = function (n) {
            return this.add(n.mul(this.dot(n) * -2.0)).mul(-1);
        };

        return Vector3;

    })();

    this.Normal3 = (function () {

        function Normal3(x, y, z) {
            this.x = x;
            this.y = y;
            this.z = z;
            this.dot = __bind(this.dot, this);

            this.add = __bind(this.add, this);

            this.mul = __bind(this.mul, this);

        }

        Normal3.prototype.mul = function (c) {
            return new Normal3(this.x * c, this.y * c, this.z * c);
        };

        Normal3.prototype.add = function (n) {
            return new Normal3(this.x + n.x, this.y + n.y, this.z + n.z);
        };

        Normal3.prototype.dot = function (v) {
            return this.x * v.x + this.y * v.y + this.z * v.z;
        };

        return Normal3;

    })();

    this.Point3 = (function () {

        function Point3(x, y, z) {
            this.x = x;
            this.y = y;
            this.z = z;
            this.subVector = __bind(this.subVector, this);

            this.subPoint = __bind(this.subPoint, this);

            this.add = __bind(this.add, this);

        }

        Point3.prototype.add = function (v) {
            return new Point3(this.x + v.x, this.y + v.y, this.z + v.z);
        };

        Point3.prototype.subPoint = function (p) {
            return new Vector3(this.x - p.x, this.y - p.y, this.z - p.z);
        };

        Point3.prototype.subVector = function (v) {
            return new Point3(this.x - v.x, this.y - v.y, this.z - v.z);
        };

        return Point3;

    })();

    this.Mat3x3 = (function () {

        function Mat3x3(m11, m12, m13, m21, m22, m23, m31, m32, m33) {
            this.m11 = m11;
            this.m12 = m12;
            this.m13 = m13;
            this.m21 = m21;
            this.m22 = m22;
            this.m23 = m23;
            this.m31 = m31;
            this.m32 = m32;
            this.m33 = m33;
            this.determinant = (this.m11 * this.m22 * this.m33) + (this.m12 * this.m23 * this.m31) + (this.m13 * this.m21 * this.m32) - (this.m13 * this.m22 * this.m31) - (this.m12 * this.m21 * this.m33) - (this.m11 * this.m23 * this.m32);
        }

        Mat3x3.prototype.mulMat = function (m) {
            return new Mat3x3(this.m11 * m.m11 + this.m12 * m.m21 + this.m13 * m.m31, this.m11 * m.m12 + this.m12 * m.m22 + this.m13 * m.m32, this.m11 * m.m13 + this.m12 * m.m23 + this.m13 * m.m33, this.m21 * m.m11 + this.m22 * m.m21 + this.m23 * m.m31, this.m21 * m.m12 + this.m22 * m.m22 + this.m23 * m.m32, this.m21 * m.m13 + this.m22 * m.m23 + this.m23 * m.m33, this.m31 * m.m11 + this.m32 * m.m21 + this.m33 * m.m31, this.m31 * m.m12 + this.m32 * m.m22 + this.m33 * m.m32, this.m31 * m.m13 + this.m32 * m.m23 + this.m33 * m.m33);
        };

        Mat3x3.prototype.mulVec = function (v) {
            return new Vector3(this.m11 * v.x + this.m12 * v.y + this.m13 * v.z, this.m21 * v.x + this.m22 * v.y + this.m23 * v.z, this.m31 * v.x + this.m32 * v.y + this.m33 * v.z);
        };

        Mat3x3.prototype.changeCol1 = function (v) {
            return new Mat3x3(v.x, this.m12, this.m13, v.y, this.m22, this.m23, v.z, this.m32, this.m33);
        };

        Mat3x3.prototype.changeCol2 = function (v) {
            return new Mat3x3(this.m11, v.x, this.m13, this.m21, v.y, this.m23, this.m31, v.z, this.m33);
        };

        Mat3x3.prototype.changeCol3 = function (v) {
            return new Mat3x3(this.m11, this.m12, v.x, this.m21, this.m22, v.y, this.m31, this.m32, v.z);
        };

        return Mat3x3;

    })();

    this.Mat4x4 = (function () {

        function Mat4x4(m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44) {
            this.m11 = m11;
            this.m12 = m12;
            this.m13 = m13;
            this.m14 = m14;
            this.m21 = m21;
            this.m22 = m22;
            this.m23 = m23;
            this.m24 = m24;
            this.m31 = m31;
            this.m32 = m32;
            this.m33 = m33;
            this.m34 = m34;
            this.m41 = m41;
            this.m42 = m42;
            this.m43 = m43;
            this.m44 = m44;
            this.xMat = __bind(this.xMat, this);

            this.xPoint = __bind(this.xPoint, this);

            this.xVector = __bind(this.xVector, this);

            this.transpond = __bind(this.transpond, this);

        }

        Mat4x4.prototype.transpond = function () {
            return new Mat4x4(this.m11, this.m21, this.m31, this.m41, this.m12, this.m22, this.m32, this.m42, this.m13, this.m23, this.m33, this.m43, this.m14, this.m24, this.m34, this.m44);
        };

        Mat4x4.prototype.xVector = function (v) {
            return new Vector3(this.m11 * v.x + this.m12 * v.y + this.m13 * v.z, this.m21 * v.x + this.m22 * v.y + this.m23 * v.z, this.m31 * v.x + this.m32 * v.y + this.m33 * v.z);
        };

        Mat4x4.prototype.xPoint = function (p) {
            return new Point3(this.m11 * p.x + this.m12 * p.y + this.m13 * p.z + this.m14, this.m21 * p.x + this.m22 * p.y + this.m23 * p.z + this.m24, this.m31 * p.x + this.m32 * p.y + this.m33 * p.z + this.m34);
        };

        Mat4x4.prototype.xMat = function (m) {
            return new Mat4x4(this.m11 * m.m11 + this.m12 * m.m21 + this.m13 * m.m31 + this.m14 * m.m41, this.m11 * m.m12 + this.m12 * m.m22 + this.m13 * m.m32 + this.m14 * m.m42, this.m11 * m.m13 + this.m12 * m.m23 + this.m13 * m.m33 + this.m14 * m.m43, this.m11 * m.m14 + this.m12 * m.m24 + this.m13 * m.m34 + this.m14 * m.m44, this.m21 * m.m11 + this.m22 * m.m21 + this.m23 * m.m31 + this.m24 * m.m41, this.m21 * m.m12 + this.m22 * m.m22 + this.m23 * m.m32 + this.m24 * m.m42, this.m21 * m.m13 + this.m22 * m.m23 + this.m23 * m.m33 + this.m24 * m.m43, this.m21 * m.m14 + this.m22 * m.m24 + this.m23 * m.m34 + this.m24 * m.m44, this.m31 * m.m11 + this.m32 * m.m21 + this.m33 * m.m31 + this.m34 * m.m41, this.m31 * m.m12 + this.m32 * m.m22 + this.m33 * m.m32 + this.m34 * m.m42, this.m31 * m.m13 + this.m32 * m.m23 + this.m33 * m.m33 + this.m34 * m.m43, this.m31 * m.m14 + this.m32 * m.m24 + this.m33 * m.m34 + this.m34 * m.m44, this.m41 * m.m11 + this.m42 * m.m21 + this.m43 * m.m31 + this.m44 * m.m41, this.m41 * m.m12 + this.m42 * m.m22 + this.m43 * m.m32 + this.m44 * m.m42, this.m41 * m.m13 + this.m42 * m.m23 + this.m43 * m.m33 + this.m44 * m.m43, this.m41 * m.m14 + this.m42 * m.m24 + this.m43 * m.m34 + this.m44 * m.m44);
        };

        return Mat4x4;

    })();

}).call(this);
